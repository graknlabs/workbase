#
# GRAKN.AI - THE KNOWLEDGE GRAPH
# Copyright (C) 2018 Grakn Labs Ltd
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

version: 2.1
commands:
  install-bazel-linux-rbe:
    steps:
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/build-tools/master/ci/install-bazel-linux.sh
      - run: bash ./install-bazel-linux.sh && rm ./install-bazel-linux.sh
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/build-tools/master/ci/install-bazel-rbe.sh
      - run: bash ./install-bazel-rbe.sh && rm ./install-bazel-rbe.sh

  install-bazel-mac:
    steps:
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/build-tools/master/ci/install-bazel-mac.sh
      - run: bash ./install-bazel-mac.sh && rm ./install-bazel-mac.sh

  install-linux-dependencies:
    steps:
      - run: sudo apt install xvfb libxtst6 libxss1 libgtk2.0-0 libnss3 libasound2 libgconf-2-4 -y
      - run: Xvfb :99 & export DISPLAY=:99

  run-bazel-rbe:
    parameters:
      command:
        type: string
    steps:
      - run: bazel run @graknlabs_build_tools//ci:run-bazel-rbe -- << parameters.command >>

  run-grakn-server-linux:
    steps:
      - run-bazel-rbe:
          command: bazel build @graknlabs_grakn_core//:assemble-linux-targz
      - run: mkdir dist && tar -xvzf bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-linux.tar.gz -C ./dist/
      - run: nohup ./dist/grakn-core-all-linux/grakn server start

  run-grakn-server-mac:
    steps:
      - run: bazel build @graknlabs_grakn_core//:assemble-mac-zip
      - run: unzip bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-mac.zip -d ./dist/
      - run: nohup ./dist/grakn-core-all-mac/grakn server start

jobs:
  test-linux:
    machine: true
    working_directory: ~/workbase
    steps:
      - install-linux-dependencies
      - install-bazel-linux-rbe
      - checkout
      - run-grakn-server-linux
      - run: ./dist/grakn-core-all-linux/grakn console -f `pwd`/test/helpers/basic-genealogy.gql -k gene
      - run: bazel run @nodejs//:npm install
      - run: bazel run @nodejs//:npm run unit
      - run: bazel run @nodejs//:npm run integration
      # - run: bazel run @nodejs//:npm run e2e

  test-mac:
    macos:
      xcode: "9.0"
    working_directory: ~/workbase
    steps:
      - checkout
      - install-bazel-mac
      - run-grakn-server-mac
      - run: ./dist/grakn-core-all-mac/grakn console -f `pwd`/test/helpers/basic-genealogy.gql -k gene
      - run: bazel run @nodejs//:npm install
      - run: bazel run @nodejs//:npm run unit
      - run: bazel run @nodejs//:npm run integration
      # - run: bazel run @nodejs//:npm run e2e

  assemble-linux:
    machine: true
    working_directory: ~/workbase
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: bazel run @nodejs//:npm install
      - run: bazel run @nodejs//:npm run build
      - run: mkdir -p ~/workbase/artifacts && mv ./build/*.tar.gz ~/workbase/artifacts/grakn-workbase-$(cat VERSION)-linux.tar.gz
      - persist_to_workspace:
          root: ~/workbase
          paths:
            - artifacts/*-linux.tar.gz
            - VERSION

  assemble-mac:
    macos:
      xcode: "9.0"
    working_directory: ~/workbase
    steps:
      - install-bazel-mac
      - checkout
      - run: CSC_LINK="$APPLE_CODE_SIGNING_CERTIFICATE_URL" CSC_KEY_PASSWORD="$APPLE_CODE_SIGNING_PASSWORD"
      - run: bazel run @nodejs//:npm install
      - run: bazel run @nodejs//:npm run build
      - run: mkdir -p ~/workbase/artifacts && mv ./build/*.dmg ~/workbase/artifacts/grakn-workbase-$(cat VERSION)-mac.dmg
      - persist_to_workspace:
          root: ~/workbase
          paths:
            - artifacts/*-mac.dmg

  assemble-windows:
    machine: true
    working_directory: ~/workbase
    steps:
      - checkout
      - run:
          command: .circleci/windows/assemble.py
          no_output_timeout: 20m

  release-approval:
    machine: true
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: bazel run @graknlabs_build_tools//ci:release-approval

  deploy-github:
    docker:
      - image: cibuilds/github:0.10
    working_directory: ~/workbase
    steps:
      - attach_workspace:
          at: ~/workbase
      - run:
          name: "Publish Draft Release on GitHub"
          command: |
            ghr -t ${GRABL_CREDENTIAL} -u ${CIRCLE_PROJECT_USERNAME} \
            -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} \
            -delete -draft v$(cat VERSION) ./artifacts

  deploy-brew:
    machine: true
    steps:
      - attach_workspace:
          at: ~/workbase
      - install-bazel-linux-rbe
      - checkout
      - run:
          command: |
            export DEPLOY_BREW_FN="~/workbase/artifacts/grakn-workbase-$(cat VERSION)-mac.dmg"
            export DEPLOY_BREW_CHECKSUM=$(sha256sum $DEPLOY_BREW_FN | awk '{print $1}')
            bazel run //:deploy-brew -- release

  release-cleanup:
    machine: true
    steps:
      - checkout
      - run: git push --delete origin workbase-release-branch

workflows:
  workbase:
    jobs:
      - test-linux:
          filters:
            branches:
              ignore: workbase-release-branch
      - test-mac:
          filters:
            branches:
              ignore: workbase-release-branch
      - assemble-linux:
          filters:
            branches:
              only: master
          requires:
            - test-linux
            - test-mac
      - assemble-mac:
          filters:
            branches:
              only: master
          requires:
            - test-linux
            - test-mac
      - assemble-windows:
          filters:
            branches:
              only: master
      - release-approval:
          filters:
            branches:
              only: master
          requires:
            - assemble-linux
            - assemble-mac
            - assemble-windows

  workbase-release:
    jobs:
      - deploy-github:
          filters:
            branches:
              only: workbase-release-branch
      - deploy-approval:
          type: approval
          requires:
            - deploy-github
          filters:
            branches:
              only: workbase-release-branch
      - deploy-brew:
          requires:
            - deploy-approval
          filters:
            branches:
              only: workbase-release-branch
      - release-cleanup:
          requires:
            - deploy-github
          filters:
            branches:
              only: workbase-release-branch
