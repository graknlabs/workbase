#
# Copyright (C) 2021 Grakn Labs
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

# NOTE: this file needs to be called `BUILD.bzl` to avoid conflicts with `build/` expected by electron-builder

load("@graknlabs_dependencies//distribution:deployment.bzl", "deployment")
load("@graknlabs_dependencies//tool/release:rules.bzl", "release_validate_deps")
load("@graknlabs_dependencies//tool/checkstyle:rules.bzl", "checkstyle_test")
load("@graknlabs_bazel_distribution//common:rules.bzl", "checksum")
load("@graknlabs_bazel_distribution//github:rules.bzl", "deploy_github")
load("@graknlabs_bazel_distribution//brew:rules.bzl", "deploy_brew")
load("@rules_pkg//:pkg.bzl", "pkg_zip")


pkg_zip(
    name = "mac-zip",
    srcs = glob(["dist_electron/*.dmg"]),
)

deploy_github(
    name = "deploy-github-mac",
    organisation = 'graknlabs',
    repository = 'workbase',
    title = "Grakn Workbase",
    title_append_version = True,
    release_description = "//:RELEASE_TEMPLATE.md",
    archive = ":mac-zip",
    version_file = ":VERSION",
    draft = False
)

pkg_zip(
    name = "windows-zip",
    srcs = glob(["dist_electron/*.exe"]),
)

deploy_github(
    name = "deploy-github-windows",
    organisation = 'graknlabs',
    repository = 'workbase',
    title = "Grakn Workbase",
    title_append_version = True,
    release_description = "//:RELEASE_TEMPLATE.md",
    archive = ":windows-zip",
    version_file = ":VERSION",
    draft = False
)

pkg_zip(
    name = "linux-zip",
    srcs = glob(["dist_electron/*.AppImage"]),
)

deploy_github(
    name = "deploy-github-linux",
    organisation = 'graknlabs',
    repository = 'workbase',
    title = "Grakn Workbase",
    title_append_version = True,
    release_description = "//:RELEASE_TEMPLATE.md",
    archive = ":linux-zip",
    version_file = ":VERSION",
    draft = False
)

py_binary(
    name = "wait-for-release",
    srcs = [".grabl/wait-for-release.py"],
)

checksum(
    name = "checksum-mac",
    archive = ":mac-zip",
)

deploy_brew(
    name = "deploy-brew",
    snapshot = deployment['brew.snapshot'],
    release = deployment['brew.release'],
    formula = "//config/brew:grakn-workbase.rb",
    checksum = "//:checksum-mac",
    version_file = "//:VERSION"
)

checkstyle_test(
    name = "checkstyle",
    include = glob(["*", ".grabl/*", ".circleci/*"]),
    exclude = glob([".circleci/windows/*", "build/**", "public/**", "grakn-client/**", "package.json", "package-lock.json", "dist_electron/**/*"]),
    license_type = "agpl",
)

release_validate_deps(
    name = "release-validate-deps",
    refs = "@graknlabs_workbase_workspace_refs//:refs.json",
    tagged_deps = [
        "@graknlabs_common",
    ],
    tags = ["manual"]  # avoids running this target when executing bazel test //...
)
